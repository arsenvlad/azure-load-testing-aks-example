name: azure-deploy-aks
on:
  workflow_dispatch:
    inputs:
      vm_size:
        description: 'VM Size'
        required: true
        default: 'Standard_D16s_v5'
      location:
        description: 'Location'
        required: true
        default: 'eastus'
      resource_group:
        description: 'Resource Group'
        required: true
        default: 'rg-loadtestaks'
      aks_name:
        description: 'AKS Name'
        required: true
        default: 'loadtestaks'
      dns_label:
        description: 'DNS Label'
        required: true
        default: 'avloadtestaks'
jobs:
  deploy-aks:
    runs-on: ubuntu-latest
    env:
      RG: "${{ github.event.inputs.resource_group }}"
      LOCATION: "${{ github.event.inputs.location }}"
      AKS_NAME: "${{ github.event.inputs.aks_name }}"
      DNS_LABEL: "${{ github.event.inputs.dns_label }}"
      VM_SIZE: "${{ github.event.inputs.vm_size }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Delete existing resource group
        run: |
          if [ $(az group exists --name ${RG}) = true ]; then
                az group delete --resource-group ${RG} --yes
          fi
      - name: Deploy AKS
        run: |
          az group create --resource-group ${RG} --location ${LOCATION}
          az aks create --resource-group ${RG} --name ${AKS_NAME} --node-vm-size ${VM_SIZE} --node-osdisk-size 128 --node-osdisk-type Managed --node-count 1 --location ${LOCATION} --enable-addons monitoring --generate-ssh-keys
          az aks get-credentials --resource-group ${RG} --name ${AKS_NAME}
      - name: Deploy NGINX Ingress Controller
        run: |
          kubectl create namespace ingress-basic
          
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update

          helm install nginx-ingress ingress-nginx/ingress-nginx --namespace ingress-basic --set controller.replicaCount=2 --set controller.nodeSelector."beta\.kubernetes\.io/os"=linux --set defaultBackend.nodeSelector."beta\.kubernetes\.io/os"=linux --set controller.admissionWebhooks.patch.nodeSelector."beta\.kubernetes\.io/os"=linux --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-dns-label-name"=$DNS_LABEL

          ip=""
          while [ -z $ip ]; do
            echo "Waiting for service IP"
            ip=$(kubectl get svc nginx-ingress-ingress-nginx-controller --namespace ingress-basic --template="{{range .status.loadBalancer.ingress}}{{.ip}}{{end}}")
            [ -z "$ip" ] && sleep 10
          done
          echo 'Found service IP: '$ip
      - name: Deploy App
        run: |
          kubectl apply -f app/netty_hello.yml

          kubectl wait --for=condition=ready pod --timeout=120s -l app=netty-backend
          
          kubectl get service --all-namespaces

          kubectl get pods --all-namespaces
      - name: Azure Logout
        run: |
          az logout
          az cache purge
          az account clear